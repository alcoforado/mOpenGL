#include <QCoreApplication>

#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstdarg>
#include "Path.h"
#include <fstream>
#include <iostream>


class Text2Header
{
private:
    void write_file_header(std::ostream &out,std::string arrayName) {
       out << "// header file generated by txt2h, Original in 2003-2006 by ScottManDeath\nModified by Marcos Alcoforado\n";
       out << "#ifndef  TXT_HEADER_"  << arrayName << std::endl;
       out << "#define  TXT_HEADER_" << arrayName << std::endl;
       out << "char " + arrayName +"[]=" << std::endl;
    }

    void write_file_footer(std::ostream &out,std::string arrayName) {
       out << "#endif  // #ifdef TXT_HEADER_" +  arrayName << std::endl;
    }

    void write_line_as_string(std::ostream &outstream,std::string line){

        line = line.substr(0, line.find('\n'));
        std::string out;
        for (size_t i = 0; i < line.size(); ++i) {
           char c = line[i];
           if ('"' == c)
              out += "\\\"";
           else if ('\\' == c)
              out += "\\\\";
           else
              out += c;
        }
        outstream << "\"" + out +"\\n\"" << std::endl;


    }

public:
    Text2Header()
    {

    }

    void Transform(std::string fileGLSL,std::string arrayName,std::string fileHeaderName)
    {
        std::ifstream in(fileGLSL.c_str());
        std::ofstream out(fileHeaderName.c_str());

        write_file_header(out,arrayName);
        while (!in.eof())
        {
            char buff[5000];
            in.getline(buff,5000);

            this->write_line_as_string(out,std::string(buff));

        }
        write_file_footer(out,arrayName);


    }




};

using namespace std;


int main(int argc, char** args) {
   if (argc != 2) {
      std::cout << "syntax error,\nusage :  txt2h <infile>\n";
      return -1;
   }
   Path pathIn(args[1]);
   if (!pathIn.Exist())
   {
       printf("Error, File %s not found\n",args[1]);
       return -1;
   }
   Path pathOut(pathIn.FullPathWithoutSuffix()+".h");
   std::string varName = pathOut.FileNameWithoutSuffix();


   Text2Header t2h;
   t2h.Transform(pathIn.ToString(),varName,pathOut.ToString());


    printf("Done");
}


